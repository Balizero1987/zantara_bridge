#!/bin/bash

# ZANTARA Bridge Deployment Script
# Deploy new features with Gmail + Calendar + Conversations

set -e

echo "üöÄ ZANTARA BRIDGE - DEPLOYMENT SCRIPT"
echo "======================================"

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: Run this script from the project root directory"
    exit 1
fi

# Environment variables
PROJECT_ID="involuted-box-469105-r0"
REGION="asia-southeast2"
SERVICE_NAME="zantara-bridge-v2-prod"
SERVICE_ACCOUNT="zantara@involuted-box-469105-r0.iam.gserviceaccount.com"
TIMESTAMP=$(date +%Y%m%d-%H%M%S)
IMAGE_NAME="asia-southeast2-docker.pkg.dev/$PROJECT_ID/zantara-repo/$SERVICE_NAME:new-features-$TIMESTAMP"

echo "üì¶ Project: $PROJECT_ID"
echo "üè∑Ô∏è  Image: $IMAGE_NAME"
echo "‚è∞ Timestamp: $TIMESTAMP"
echo ""

# Step 1: Clean and prepare
echo "üßπ Step 1: Cleaning and preparing..."
npm install
npm run build
echo "‚úÖ Build completed"
echo ""

# Step 2: Try Docker build locally (with timeout protection)
echo "üê≥ Step 2: Building Docker image..."
timeout 300s docker build -t $IMAGE_NAME . || {
    echo "‚ö†Ô∏è  Docker build timed out or failed"
    echo "üìù Falling back to Cloud Run source deploy..."
    
    # Fallback: Try gcloud run deploy with --no-cache
    echo "üîÑ Attempting source deployment..."
    gcloud run deploy $SERVICE_NAME \
        --source . \
        --region=$REGION \
        --project=$PROJECT_ID \
        --service-account=$SERVICE_ACCOUNT \
        --set-env-vars="API_KEYS=7a0adc0681bf7a5c6b6476f70a4581c85c49faeb66f7f61f20dc9b57ba86cfb3,ZANTARA_PLUGIN_API_KEY=7a0adc0681bf7a5c6b6476f70a4581c85c49faeb66f7f61f20dc9b57ba86cfb3,DRIVE_FOLDER_AMBARADAM=1UGbm5er6Go351S57GQKUjmxMxHyT4QZb,GMAIL_SENDER=zero@balizero.com,IMPERSONATE_USER=zero@balizero.com,NODE_ENV=production,OPENAI_MODEL=gpt-4o-mini,CONVERSATION_TRACKING=true,GMAIL_MONITORING=true,CALENDAR_INTEGRATION=true,GOOGLE_CLOUD_PROJECT=involuted-box-469105-r0" \
        --set-secrets="GOOGLE_SERVICE_ACCOUNT_KEY=GOOGLE_SERVICE_ACCOUNT_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest" \
        --memory=1Gi \
        --cpu=1 \
        --max-instances=10 \
        --timeout=300 \
        --no-cache || {
        
        echo "‚ùå Source deployment also failed"
        echo "üí° Suggestions:"
        echo "   1. Check Cloud Build permissions"
        echo "   2. Try building Docker image manually"
        echo "   3. Use existing image and manual code sync"
        exit 1
    }
    
    echo "‚úÖ Source deployment completed"
    exit 0
}

echo "‚úÖ Docker build completed"
echo ""

# Step 3: Push to registry
echo "üì§ Step 3: Pushing to Google Container Registry..."
docker push $IMAGE_NAME || {
    echo "‚ùå Failed to push image to registry"
    exit 1
}
echo "‚úÖ Image pushed successfully"
echo ""

# Step 4: Deploy to Cloud Run
echo "üöÄ Step 4: Deploying to Cloud Run..."
gcloud run deploy $SERVICE_NAME \
    --image=$IMAGE_NAME \
    --region=$REGION \
    --project=$PROJECT_ID \
    --service-account=$SERVICE_ACCOUNT \
    --set-env-vars="API_KEYS=7a0adc0681bf7a5c6b6476f70a4581c85c49faeb66f7f61f20dc9b57ba86cfb3,ZANTARA_PLUGIN_API_KEY=7a0adc0681bf7a5c6b6476f70a4581c85c49faeb66f7f61f20dc9b57ba86cfb3,DRIVE_FOLDER_AMBARADAM=1UGbm5er6Go351S57GQKUjmxMxHyT4QZb,GMAIL_SENDER=zero@balizero.com,IMPERSONATE_USER=zero@balizero.com,NODE_ENV=production,OPENAI_MODEL=gpt-4o-mini,CONVERSATION_TRACKING=true,GMAIL_MONITORING=true,CALENDAR_INTEGRATION=true,GOOGLE_CLOUD_PROJECT=involuted-box-469105-r0" \
    --set-secrets="GOOGLE_SERVICE_ACCOUNT_KEY=GOOGLE_SERVICE_ACCOUNT_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest" \
    --memory=1Gi \
    --cpu=1 \
    --max-instances=10 \
    --allow-unauthenticated || {
    
    echo "‚ùå Deployment failed"
    exit 1
}

echo ""
echo "üéâ DEPLOYMENT SUCCESSFUL!"
echo "========================="
echo "üåê Service URL: https://$SERVICE_NAME-1064094238013.$REGION.run.app"
echo "üè∑Ô∏è  Image: $IMAGE_NAME"
echo "üìÖ Deployed: $(date)"
echo ""

# Step 5: Test deployment
echo "üß™ Step 5: Testing deployment..."
echo "Testing Drive integration..."

SERVICE_URL="https://$SERVICE_NAME-1064094238013.$REGION.run.app"
API_KEY="7a0adc0681bf7a5c6b6476f70a4581c85c49faeb66f7f61f20dc9b57ba86cfb3"

# Test Drive upload
curl -X POST "$SERVICE_URL/actions/drive/upload" \
    -H "Content-Type: application/json" \
    -H "X-API-KEY: $API_KEY" \
    -H "X-BZ-USER: BOSS" \
    -d "{\"filename\": \"deployment-test-$TIMESTAMP.txt\", \"content\": \"‚úÖ DEPLOYMENT SUCCESSFUL\\n\\nTimestamp: $TIMESTAMP\\nImage: $IMAGE_NAME\\nFeatures: Gmail + Calendar + Conversations\\n\\nGenerated by deployment script\", \"mimeType\": \"text/plain\", \"folderId\": \"1UGbm5er6Go351S57GQKUjmxMxHyT4QZb\"}" \
    -w "\nHTTP Status: %{http_code}\n" || {
    
    echo "‚ùå Drive test failed"
    exit 1
}

echo ""
echo "‚úÖ Drive test passed"

# Test new Gmail API (if available)
echo "Testing Gmail API..."
curl -X POST "$SERVICE_URL/api/gmail/test-filters" \
    -H "Content-Type: application/json" \
    -H "X-API-KEY: $API_KEY" \
    -H "X-BZ-USER: BOSS" \
    -d '{"from": "test@imigrasi.go.id", "subject": "Test Gmail Filter", "body": "Testing ZANTARA Gmail monitoring"}' \
    -w "\nHTTP Status: %{http_code}\n" || {
    
    echo "‚ö†Ô∏è  Gmail API not yet available (expected if source deploy was used)"
}

echo ""
echo "üéä DEPLOYMENT COMPLETE!"
echo "New features ready to use when image deployment succeeds."