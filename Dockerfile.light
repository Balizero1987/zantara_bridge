# Lightweight Zantara Bridge Dockerfile
# Optimized for zero-cost Cloud Run deployment

FROM node:20-alpine AS base

# Install security updates and clean up
RUN apk update && apk upgrade && \
    apk add --no-cache dumb-init && \
    rm -rf /var/cache/apk/*

# Create app directory with proper permissions
WORKDIR /app
RUN addgroup -g 1001 -S nodejs
RUN adduser -S appuser -u 1001

# Copy package files
COPY --chown=appuser:nodejs package*.json ./

# Install dependencies with production optimizations
ENV NODE_ENV=production
RUN npm ci --only=production --ignore-scripts && \
    npm cache clean --force

# Copy source and build
COPY --chown=appuser:nodejs . .
RUN npm run build

# Remove source files to reduce image size
RUN rm -rf src/ && \
    rm -rf node_modules/@types && \
    rm -rf node_modules/typescript && \
    rm -rf node_modules/ts-node* && \
    rm -rf .git*

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Expose port
EXPOSE 8080

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the light bridge server
CMD ["npm", "run", "start:light"]