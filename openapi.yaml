openapi: 3.1.0
info:
  title: Zantara Bridge API
  description: |
    Comprehensive API for Google Workspace integration, AI-powered chat, and productivity tools.
    The API provides secure endpoints for Drive, Gmail, Calendar operations, AI analytics, and conversation management.
    
    **Performance Features:**
    - Redis-based caching for Drive operations (5min folder cache, 10min file cache, 3min search cache)
    - Firestore-powered memory system with full-text search and relevance scoring
    - Automatic cache invalidation on data changes
    - Zero-cost optimized architecture with graceful fallbacks
  version: 1.0.0
  contact:
    name: Bali Zero HQ
    email: zero@balizero.com
  license:
    name: Proprietary
    
servers:
  - url: https://zantara-bridge-v2-prod-1064094238013.asia-southeast2.run.app
    description: Production server (Cloud Run)
  - url: https://zantara-light-bridge-1064094238013.asia-southeast2.run.app
    description: Zantara Light Bridge - Zero-cost optimized (Cloud Run)
  - url: http://localhost:8080
    description: Development server

security:
  - ApiKeyAuth: []
  - UserIdentification: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description: API key for authentication (required for most endpoints)
    UserIdentification:
      type: apiKey
      in: header
      name: X-BZ-USER
      description: User identification header (defaults to 'BOSS' if not provided)

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Unauthorized:
      description: Unauthorized - Invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Forbidden:
      description: Forbidden - Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        ok:
          type: boolean
          default: false
        error:
          type: string
          description: Error message
        details:
          type: string
          description: Additional error details
      required:
        - error

    SuccessResponse:
      type: object
      properties:
        ok:
          type: boolean
          default: true
        message:
          type: string

    ChatRequest:
      type: object
      properties:
        message:
          type: string
          description: The chat message to process
        ririMode:
          type: boolean
          description: Enable RIRI mode for special processing
        sessionId:
          type: string
          description: Session ID for conversation continuity
        saveAs:
          type: string
          enum: [chat, note, brief]
          description: How to save the conversation
        title:
          type: string
          description: Title for saved conversation
      required:
        - message

    ChatResponse:
      type: object
      properties:
        ok:
          type: boolean
        text:
          type: string
          description: AI response text
        responseTime:
          type: number
          description: Response time in milliseconds
        savedAs:
          type: string
          description: How the conversation was saved
        owner:
          type: string
          description: Owner of the conversation

    DriveFile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        mimeType:
          type: string
        webViewLink:
          type: string
        createdTime:
          type: string
          format: date-time
        parents:
          type: array
          items:
            type: string

    DriveSearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Search query
        fileType:
          type: string
          description: MIME type filter
        modifiedAfter:
          type: string
          format: date-time
        folderId:
          type: string
          description: Parent folder ID
        includeFiles:
          type: boolean
          default: true
        includeFolders:
          type: boolean
          default: true
        driveId:
          type: string
          description: Shared Drive ID

    MemorySaveRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        tags:
          type: array
          items:
            type: string
        folderId:
          type: string
        driveId:
          type: string
      required:
        - title
        - content

    CalendarEventRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        location:
          type: string
        attendees:
          type: array
          items:
            type: string
            format: email
      required:
        - title
        - startDateTime

    EmailRequest:
      type: object
      properties:
        to:
          type: string
          format: email
        subject:
          type: string
        body:
          type: string
        cc:
          type: array
          items:
            type: string
            format: email
        bcc:
          type: array
          items:
            type: string
            format: email
        attachments:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
              content:
                type: string
                format: byte
      required:
        - to
        - subject
        - body

    UserProfile:
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
        lastActive:
          type: string
          format: date-time

    MonitoringStatus:
      type: object
      properties:
        ok:
          type: boolean
        monitoring:
          type: object
          properties:
            health:
              type: object
            stats:
              type: object
            drive:
              type: object
              properties:
                ok:
                  type: boolean
                user:
                  type: object
                  properties:
                    displayName:
                      type: string
                    emailAddress:
                      type: string
                quota:
                  type: object
                isImpersonated:
                  type: boolean
                impersonateUser:
                  type: string
            openai:
              type: object
            gmail:
              type: object
            calendar:
              type: object
        ts:
          type: string
          format: date-time

paths:
  /:
    get:
      tags: [Status]
      summary: Light Bridge service information
      description: Returns JSON service information including available endpoints and uptime metrics
      security: []
      responses:
        '200':
          description: Light Bridge service information
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  service:
                    type: string
                    example: "zantara-light-bridge"
                  version:
                    type: string
                    example: "1.0.0"
                  description:
                    type: string
                    example: "Lightweight Zantara Bridge - Zero-cost optimized"
                  endpoints:
                    type: object
                    properties:
                      status:
                        type: string
                        example: "/bridge/status"
                      health:
                        type: string
                        example: "/health"
                      memory:
                        type: string
                        example: "/actions/memory/save"
                      drive:
                        type: string
                        example: "/actions/drive/upload"
                  uptime:
                    type: number
                    description: Service uptime in milliseconds
                  calls:
                    type: number
                    description: Total number of calls processed

  /bridge/status:
    get:
      tags: [Status]
      summary: Bridge service status
      description: Returns detailed service status including environment and metrics
      security: []
      responses:
        '200':
          description: Service status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  service:
                    type: string
                    example: "zantara-light-bridge"
                  startedAt:
                    type: number
                    description: Timestamp when service started
                  uptimeMs:
                    type: number
                    description: Service uptime in milliseconds
                  calls:
                    type: number
                    description: Total number of calls processed
                  dedupHits:
                    type: number
                    description: Number of deduplication hits
                  sharedDrive:
                    type: string
                    example: "0AJC3-SJL03OOUk9PVA"
                    description: AMBARADAM Shared Drive ID

  /call:
    post:
      tags: [AI & Chat]
      summary: Lightweight AI assistant call
      description: |
        Process AI assistant requests with simplified lightweight implementation.
        Supports basic chat, drive actions, and memory operations with cost optimization.
      parameters:
        - name: X-BZ-USER
          in: header
          schema:
            type: string
          description: User identifier for logging (defaults to 'LIGHT_USER')
        - name: X-API-KEY
          in: header
          schema:
            type: string
          description: API key for authentication (optional for this endpoint)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: User message or content
                  example: "Help me with my task"
                key:
                  type: string
                  description: Action key to determine behavior
                  enum: [chat.simple, drive.upload, memory.save]
                  default: chat.simple
                  example: "chat.simple"
                params:
                  type: object
                  description: Additional parameters for specific actions
                  example: {}
                model:
                  type: string
                  description: AI model to use
                  default: "gpt-4o-mini"
                  example: "gpt-4o-mini"
              required:
                - message
      responses:
        '200':
          description: AI response processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  service:
                    type: string
                    example: "zantara-light-bridge"
                    description: Service identifier
                  response:
                    type: string
                    description: Processed response text
                    example: "Light bridge processed: Hello from CLI test"
                  timestamp:
                    type: string
                    format: date-time
                    description: Response timestamp
                    example: "2025-09-19T03:19:02.674Z"
        '400':
          description: Bad request - missing message
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  error:
                    type: string
                    example: "Message is required"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /actions/chat/recap:
    post:
      tags: [AI & Chat]
      summary: Save chat recap
      description: Save a chat recap or content with auto-save middleware
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recap:
                  type: string
                  description: Recap content
                content:
                  type: string
                  description: Alternative content field
      responses:
        '200':
          description: Recap saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  recap:
                    type: string
                    description: Saved recap content
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /actions/drive/setup-compliance-knowledge:
    post:
      tags: [Drive]
      summary: Setup compliance knowledge structure
      description: Ensure proper compliance knowledge folder structure in Drive
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Compliance structure setup successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
        '500':
          description: Setup failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /diag/drive/check:
    get:
      tags: [Diagnostics]
      summary: Drive diagnostic check
      description: Verify Drive access and folder permissions
      parameters:
        - name: folderId
          in: query
          schema:
            type: string
          description: Optional folder ID to verify access
      responses:
        '200':
          description: Drive diagnostic information
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  user:
                    type: object
                    description: User information
                  quota:
                    type: object
                    description: Storage quota information
                  folderId:
                    type: [string, "null"]
                  folderCheck:
                    type: [object, "null"]
                    description: Folder access check results
                  env:
                    type: object
                    description: Environment configuration
                  ts:
                    type: string
                    format: date-time
        '500':
          description: Diagnostic check failed

  /diag/drive/find-folder:
    get:
      tags: [Diagnostics]
      summary: Find Drive folders by name
      description: Search for folders matching the provided name across My Drive and Shared Drives
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
          description: Folder name to search for
      responses:
        '200':
          description: Folder search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  folders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        driveId:
                          type: [string, "null"]
        '400':
          description: Missing name parameter
        '500':
          description: Search failed

  /dispatch/{agent}:
    post:
      tags: [Agents]
      summary: Dispatch to specific agent
      description: Route request to a specific AI agent with AMBARADAM integration
      parameters:
        - name: agent
          in: path
          required: true
          schema:
            type: string
          description: Agent identifier
        - name: X-BZ-USER
          in: header
          schema:
            type: string
          description: User identifier for logging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                payload:
                  type: object
      responses:
        '200':
          description: Agent response
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    type: string
                  response:
                    type: string
                  sharedDrive:
                    type: string
                    example: "0AJC3-SJL03OOUk9PVA"
        '404':
          description: Agent not found
        '500':
          description: Internal server error

  /health:
    get:
      tags: [Health]
      summary: Basic health check
      description: Returns the health status of the service
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  uptime:
                    type: number
                  timestamp:
                    type: string
                    format: date-time

  /api/monitoring:
    get:
      tags: [Monitoring]
      summary: Comprehensive monitoring status
      description: Returns detailed monitoring information including Drive impersonation status
      responses:
        '200':
          description: Monitoring status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/chat:
    post:
      tags: [AI & Chat]
      summary: Main chat endpoint
      description: Process chat messages with AI and optionally save to Drive
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Chat response generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/search/drive:
    post:
      tags: [Search & Discovery]
      summary: Search Google Drive files
      description: Search files in Google Drive with various filters using impersonation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriveSearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      $ref: '#/components/schemas/DriveFile'
                  count:
                    type: integer
                  query:
                    type: string
                  userId:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/search/recent:
    get:
      tags: [Search & Discovery]
      summary: Get recent files
      description: Retrieve recently modified files from Drive
      parameters:
        - name: limit
          in: query
          description: Maximum number of files to return
          schema:
            type: integer
            default: 5
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Recent files retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  recentFiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/DriveFile'
                  count:
                    type: integer

  /actions/memory/save:
    post:
      tags: [Memory]
      summary: Save memory entry (Firestore Implementation)
      description: |
        Save a memory entry to Firestore with full metadata support.
        Supports tags, categories, relevance scoring, and automatic access tracking.
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User identifier for memory isolation
                  example: "user-123"
                content:
                  type: string
                  description: Main memory content
                  example: "Meeting notes about quarterly planning"
                title:
                  type: string
                  description: Optional memory title
                  example: "Q4 Planning Meeting"
                tags:
                  type: array
                  items:
                    type: string
                  description: Searchable tags
                  example: ["meeting", "planning", "q4"]
                category:
                  type: string
                  description: Memory category
                  example: "work"
                source:
                  type: string
                  description: Origin of the memory
                  example: "api"
                metadata:
                  type: object
                  properties:
                    tokenCount:
                      type: number
                    contextType:
                      type: string
                      enum: [conversation, document, note, task]
                  description: Additional metadata
              required:
                - userId
                - content
      responses:
        '200':
          description: Memory entry saved successfully to Firestore
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Firestore document ID
                        example: "abc123def456"
                      message:
                        type: string
                        example: "Memory entry saved successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /actions/memory/search:
    get:
      tags: [Memory]
      summary: Search memory entries (Firestore Implementation)
      description: |
        Search stored memory entries in Firestore with full-text search, tag filtering, and time range queries.
        Supports relevance scoring and pagination for optimal performance.
      security:
        - ApiKeyAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          description: User identifier for memory isolation
        - name: query
          in: query
          schema:
            type: string
          description: Full-text search query
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
          description: Filter by tags
        - name: category
          in: query
          schema:
            type: string
          description: Filter by category
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 100
          description: Maximum number of results
        - name: minRelevanceScore
          in: query
          schema:
            type: number
            minimum: 0
            maximum: 1
          description: Minimum relevance score filter
        - name: timeStart
          in: query
          schema:
            type: integer
          description: Start timestamp for time range filter
        - name: timeEnd
          in: query
          schema:
            type: integer
          description: End timestamp for time range filter
      responses:
        '200':
          description: Memory search results from Firestore
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            userId:
                              type: string
                            content:
                              type: string
                            title:
                              type: string
                            tags:
                              type: array
                              items:
                                type: string
                            category:
                              type: string
                            timestamp:
                              type: number
                            relevanceScore:
                              type: number
                            accessCount:
                              type: number
                        description: Array of matching memory entries
                      count:
                        type: integer
                        description: Number of results returned

  /actions/memory/stats:
    get:
      tags: [Memory]
      summary: Get memory statistics
      description: Retrieve comprehensive memory usage statistics for a user
      security:
        - ApiKeyAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          description: User identifier
      responses:
        '200':
          description: Memory statistics retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      totalEntries:
                        type: integer
                      totalTokens:
                        type: integer
                      averageRelevanceScore:
                        type: number
                      oldestEntry:
                        type: string
                        format: date-time
                      newestEntry:
                        type: string
                        format: date-time
                      compressionRatio:
                        type: number
                      estimatedCost:
                        type: number

  /actions/memory/recent:
    get:
      tags: [Memory]
      summary: Get recent memory entries
      description: Retrieve the most recent memory entries for a user
      security:
        - ApiKeyAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          description: User identifier
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 50
          description: Maximum number of entries to return
      responses:
        '200':
          description: Recent memory entries retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            content:
                              type: string
                            title:
                              type: string
                            timestamp:
                              type: number
                            tags:
                              type: array
                              items:
                                type: string
                      count:
                        type: integer

  /actions/memory/{id}:
    get:
      tags: [Memory]
      summary: Get memory entry by ID
      description: Retrieve a specific memory entry by its ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Memory entry ID
        - name: userId
          in: query
          schema:
            type: string
          description: User identifier for authorization
      responses:
        '200':
          description: Memory entry retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      userId:
                        type: string
                      content:
                        type: string
                      title:
                        type: string
                      tags:
                        type: array
                        items:
                          type: string
                      category:
                        type: string
                      timestamp:
                        type: number
                      accessCount:
                        type: number
                      relevanceScore:
                        type: number
        '404':
          description: Memory entry not found
    
    put:
      tags: [Memory]
      summary: Update memory entry
      description: Update an existing memory entry
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Memory entry ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                title:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                category:
                  type: string
                relevanceScore:
                  type: number
                  minimum: 0
                  maximum: 1
      responses:
        '200':
          description: Memory entry updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      message:
                        type: string
    
    delete:
      tags: [Memory]
      summary: Delete memory entry
      description: Delete a memory entry by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Memory entry ID
        - name: userId
          in: query
          schema:
            type: string
          description: User identifier for authorization
      responses:
        '200':
          description: Memory entry deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      message:
                        type: string

  /actions/memory/cleanup:
    post:
      tags: [Memory]
      summary: Cleanup old memory entries
      description: Remove old or low-relevance memory entries for cost optimization
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User identifier
                maxEntries:
                  type: integer
                  description: Maximum entries to keep
                  default: 1000
                minRelevanceScore:
                  type: number
                  description: Minimum relevance score to keep
                  default: 0.1
                maxAgeInDays:
                  type: integer
                  description: Maximum age in days
                  default: 365
              required:
                - userId
      responses:
        '200':
          description: Cleanup completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                      message:
                        type: string

  /actions/drive/upload:
    post:
      tags: [Drive]
      summary: Upload file to Drive (with cache invalidation)
      description: |
        Upload a file to Google Drive with impersonation support.
        Automatically invalidates relevant cache entries for folder listings and search results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                content:
                  type: string
                folderId:
                  type: string
                mimeType:
                  type: string
              required:
                - filename
                - content
      responses:
        '200':
          description: File uploaded successfully (cache invalidated)
          headers:
            X-Cache-Status:
              description: Cache invalidation status
              schema:
                type: string
                example: "invalidated"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  webViewLink:
                    type: string
                  cacheStatus:
                    type: string
                    description: Cache invalidation status
                    example: "folders_invalidated"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/calendar/deadline:
    post:
      tags: [Calendar]
      summary: Create calendar deadline
      description: Create a deadline event in Google Calendar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarEventRequest'
      responses:
        '200':
          description: Calendar event created
          content:
            application/json:
              schema:
                type: object
                properties:
                  eventId:
                    type: string
                  htmlLink:
                    type: string
                  summary:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /actions/email/send:
    post:
      tags: [Email]
      summary: Send email
      description: Send an email via Gmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        '200':
          description: Email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: string
                  threadId:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/drive/brief:
    post:
      tags: [Drive]
      summary: Generate and upload brief document
      description: Generate a Word document brief and upload it to Drive
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                details:
                  type: string
                template:
                  type: string
                  enum: [business, technical, marketing]
                  default: business
                folderId:
                  type: string
              required:
                - topic
                - details
      responses:
        '200':
          description: Brief generated and uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  fileId:
                    type: string
                  fileName:
                    type: string
                  webViewLink:
                    type: string
        '500':
          $ref: '#/components/responses/ServerError'

  /api/ai/analyze-document:
    post:
      tags: [AI & Analytics]
      summary: Analyze document with AI
      description: Perform advanced document analysis using AI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                document:
                  type: string
                fileName:
                  type: string
                analysisType:
                  type: string
                  enum: [summary, sentiment, entities, keywords]
              required:
                - document
      responses:
        '200':
          description: Document analyzed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  fileName:
                    type: string
                  analysis:
                    type: object
                  processedAt:
                    type: string
                    format: date-time

  /api/analytics:
    get:
      tags: [Analytics]
      summary: Get system analytics
      description: Retrieve comprehensive system analytics and usage statistics
      responses:
        '200':
          description: Analytics data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalChats:
                    type: integer
                  uniqueUsers:
                    type: integer
                  documentsProcessed:
                    type: integer
                  apiCalls:
                    type: object
                  last24h:
                    type: integer
                  uptime:
                    type: number
                  version:
                    type: string

  /api/gemini/generate:
    post:
      tags: [AI & Analytics]
      summary: Generate content with Google Gemini AI
      description: Generate AI content using Google's Gemini Pro model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [prompt]
              properties:
                prompt:
                  type: string
                  description: Text prompt for content generation
                  example: "Write a professional email about project updates"
      responses:
        '200':
          description: Content generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    description: Generated content
                  model:
                    type: string
                    example: "gemini-pro"
        '400':
          description: Missing or invalid prompt
        '500':
          description: Gemini service error

  /api/gemini/status:
    get:
      tags: [AI & Analytics]
      summary: Check Gemini AI service status
      description: Check if Google Gemini AI service is available
      responses:
        '200':
          description: Service status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean
                  model:
                    type: string
                    example: "gemini-pro"
                  service:
                    type: string
                    example: "Google Gemini AI"
        '500':
          description: Service check failed

  /api/users:
    get:
      tags: [User Management]
      summary: List all users
      description: Retrieve a list of all registered users
      responses:
        '200':
          description: Users retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserProfile'
                  total:
                    type: integer
    
    post:
      tags: [User Management]
      summary: Register new user
      description: Register a new user and generate API key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
              required:
                - username
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  apiKey:
                    type: string
                  username:
                    type: string
                  message:
                    type: string

  /api/conversations:
    get:
      tags: [Conversations]
      summary: List all conversations
      description: Retrieve all conversations with filtering options
      parameters:
        - name: collab
          in: query
          description: Filter by collaborator
          schema:
            type: string
        - name: status
          in: query
          description: Filter by status
          schema:
            type: string
            enum: [active, closed, archived]
      responses:
        '200':
          description: Conversations retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversations:
                    type: array
                    items:
                      type: object
                  total:
                    type: integer

  /api/dashboard:
    get:
      tags: [Dashboard]
      summary: Get dashboard data
      description: Retrieve comprehensive dashboard metrics
      responses:
        '200':
          description: Dashboard data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  overview:
                    type: object
                  activity:
                    type: object
                  topEndpoints:
                    type: array
                    items:
                      type: object
                  userActivity:
                    type: array
                    items:
                      type: object
                  systemHealth:
                    type: object

  /api/webhooks:
    get:
      tags: [Webhooks]
      summary: List webhooks
      description: Retrieve all configured webhooks
      responses:
        '200':
          description: Webhooks retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhooks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        url:
                          type: string
                        events:
                          type: array
                          items:
                            type: string
                        active:
                          type: boolean
                        created:
                          type: string
                          format: date-time
                  total:
                    type: integer
    
    post:
      tags: [Webhooks]
      summary: Create webhook
      description: Register a new webhook endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                events:
                  type: array
                  items:
                    type: string
              required:
                - url
                - events
      responses:
        '201':
          description: Webhook created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
                  events:
                    type: array
                    items:
                      type: string
                  secret:
                    type: string
                  active:
                    type: boolean
                  created:
                    type: string
                    format: date-time

tags:
  - name: Status
    description: Service status and health endpoints
  - name: Health
    description: Health check endpoints
  - name: Monitoring
    description: System monitoring and diagnostics
  - name: AI & Chat
    description: AI-powered chat and conversation management with AMBARADAM integration
  - name: Agents
    description: AI agent dispatch system with shared drive integration
  - name: Search & Discovery
    description: Search functionality across Google services
  - name: Analytics
    description: System analytics and usage statistics
  - name: Dashboard
    description: Dashboard and visualization endpoints
  - name: User Management
    description: User registration and management
  - name: Conversations
    description: Conversation management and history
  - name: Webhooks
    description: Webhook management for event notifications
  - name: Memory
    description: Memory and knowledge management
  - name: Drive
    description: Google Drive operations
  - name: Diagnostics
    description: System diagnostic and troubleshooting endpoints
  - name: Calendar
    description: Google Calendar operations
  - name: Email
    description: Gmail operations
  - name: AI & Analytics
    description: Advanced AI analysis capabilities