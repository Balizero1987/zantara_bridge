openapi: 3.1.0
info:
  title: ZANTARA Actions API
  version: 1.2.1
servers:
  - url: https://{host}
    variables:
      host:
        default: example.run.app

paths:
  /health:
    get:
      operationId: get_health
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkEnvelope'

  /actions/codex/dispatch:
    post:
      operationId: post_actions_codex_dispatch
      summary: Dispatch a task to Codex
      security: [{ bearerAuth: [] }]
      parameters:
        - name: X-Idempotency-Key
          in: header
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodexDispatchRequest'
      responses:
        "202":
          description: Accettato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodexDispatchResponse'

  /actions/codex/status/{request_id}:
    get:
      operationId: get_codex_status
      summary: Get Codex task status
      security: [{ bearerAuth: [] }]
      parameters:
        - name: request_id
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: Stato job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodexStatusResponse'

  /actions/chat/recap:
    post:
      operationId: post_actions_chat_recap
      summary: Salva recap su Drive + Firestore
      security: [{ bearerAuth: [] }]
      parameters:
        - name: X-Idempotency-Key
          in: header
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecapCreateRequest'
      responses:
        "201":
          description: Recap salvato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecapCreateResponse'

  /actions/chat/recaps:
    get:
      operationId: get_actions_chat_recaps
      summary: Lista recap utente
      security: [{ bearerAuth: [] }]
      parameters:
        - name: userId
          in: query
          required: false
          schema: { type: string }
      responses:
        "200":
          description: Lista recap
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/RecapSummary'

  /actions/calendar/create:
    post:
      operationId: post_actions_calendar_create
      summary: Crea evento calendario
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarCreateRequest'
      responses:
        "201":
          description: Evento creato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarCreateResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  # ... (schemi come gi√† scritti)
