name: Codex Dispatch Alt

on:
  repository_dispatch:
    types: [codex-dispatch-alt]

permissions:
  contents: write
  pull-requests: write

jobs:
  apply-patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Decode patch
        run: |
          echo "${{ github.event.client_payload.patch_b64 }}" | base64 -d > patch.diff
          echo "Patch salvata in patch.diff"

      - name: Apply patch
        run: |
          BRANCH="${{ github.event.client_payload.branch || 'codex/alt-update' }}"
          TITLE="${{ github.event.client_payload.title || 'Codex alt update' }}"
          BODY="${{ github.event.client_payload.body || '' }}"

          git checkout -B "$BRANCH"
          git apply --whitespace=nowarn patch.diff || git apply -3 --whitespace=nowarn patch.diff
          git add -A
          git commit -m "$TITLE" || echo "Nessuna modifica da committare"

      - name: Setup Git auth
        run: |
          git config user.name "Codex Bot"
          git config user.email "codex@zantara.ai"
          git remote set-url origin https://x-access-token:${{ secrets.CODEX_DISPATCH_TOKEN }}@github.com/${{ github.repository }}

      - name: Push changes
        env:
          BRANCH: ${{ github.event.client_payload.branch || 'codex/alt-update' }}
        run: |
          git push origin HEAD:$BRANCH --force

      - name: Create PR if not exists
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CODEX_DISPATCH_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const branch = "${{ github.event.client_payload.branch || 'codex/alt-update' }}";
            const title = "${{ github.event.client_payload.title || 'Codex alt update' }}";
            const body = "${{ github.event.client_payload.body || '' }}";

            const prs = await github.rest.pulls.list({
              owner,
              repo,
              state: "open",
              head: `${owner}:${branch}`,
            });

            if (prs.data.length === 0) {
              await github.rest.pulls.create({
                owner,
                repo,
                head: branch,
                base: "main",
                title,
                body,
              });
            }
