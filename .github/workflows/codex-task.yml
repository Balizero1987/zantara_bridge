name: Codex Task
on:
  repository_dispatch:
    types: [codex-task]
  workflow_dispatch:
    inputs:
      branch: { required: true, type: string }
      title:  { required: true, type: string }
      body:   { required: false, type: string }
permissions:
  contents: write
  pull-requests: write
jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Setup Git auth
        run: |
          git config user.name "Codex Bot"
          git config user.email "codex@zantara.ai"
          git remote set-url origin https://x-access-token:${{ secrets.CODEX_DISPATCH_TOKEN }}@github.com/${{ github.repository }}
      - name: Resolve inputs
        id: inp
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "BRANCH=${{ inputs.branch }}" >> $GITHUB_OUTPUT
            echo "TITLE=${{ inputs.title }}"  >> $GITHUB_OUTPUT
            echo "BODY=${{ inputs.body }}"    >> $GITHUB_OUTPUT
          else
            echo "BRANCH=${{ github.event.client_payload.branch || 'codex/task' }}" >> $GITHUB_OUTPUT
            echo "TITLE=${{ github.event.client_payload.title  || 'Codex task' }}"  >> $GITHUB_OUTPUT
            echo "BODY=${{ github.event.client_payload.body   || '' }}"            >> $GITHUB_OUTPUT
          fi
      - name: Create branch and scaffold
        run: |
          BRANCH="${{ steps.inp.outputs.BRANCH }}"
          TITLE="${{ steps.inp.outputs.TITLE }}"
          BODY="${{ steps.inp.outputs.BODY }}"
          git checkout -B "$BRANCH"
          mkdir -p tasks
          printf "%s\n" "$BODY" > "tasks/${BRANCH//\//-}.txt"
          git add tasks
          git commit -m "$TITLE" || true
      - name: Push
        env: { BRANCH: ${{ steps.inp.outputs.BRANCH }} }
        run: git push origin HEAD:$BRANCH --force
      - name: Open PR if missing
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CODEX_DISPATCH_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const branch = "${{ steps.inp.outputs.BRANCH }}";
            const title  = "${{ steps.inp.outputs.TITLE }}";
            const body   = "${{ steps.inp.outputs.BODY }}";
            const prs = await github.rest.pulls.list({ owner, repo, state:"open", head:`${owner}:${branch}` });
            if (!prs.data.length) await github.rest.pulls.create({ owner, repo, head: branch, base:"main", title, body });
