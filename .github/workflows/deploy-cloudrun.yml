name: Deploy Cloud Run

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:

concurrency:
  group: cloudrun-prod
  cancel-in-progress: true

jobs:
  pr-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: PR validation
        run: echo "PR check only. Skipping deploy."

  build-and-deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      id-token: write

    env:
      REGION: asia-southeast2
      SERVICE: zantara-chat-v3-1064094238013
      AR_REPO: zantara-repo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_DEPLOY_SA_EMAIL }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build project
        run: |
          npm ci
          npm run build

      - name: Build & Push Docker image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.AR_REPO }}/zantara-chat:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker buildx build --platform linux/amd64 -t "$IMAGE" --push .

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${{ env.SERVICE }}" \
            --image "$IMAGE" \
            --region "${{ env.REGION }}" \
            --platform managed \
            --service-account "${{ secrets.GCP_RUNTIME_SA_EMAIL }}" \
            --allow-unauthenticated \
            --set-env-vars "CORS_ORIGINS=*.balizero.com,USE_AI_SUMMARY=false" \
            --set-secrets "BACKEND_API_KEY=ZANTARA_BACKEND_API_KEY:latest,PLUGIN_API_KEY=ZANTARA_PLUGIN_API_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest"

      - name: Post-deploy smoke tests
        run: |
          URL="$(gcloud run services describe ${{ env.SERVICE }} \
            --region "${{ env.REGION }}" --format='value(status.url)')"

          KEY="$(gcloud secrets versions access latest \
            --secret=ZANTARA_PLUGIN_API_KEY --project ${{ secrets.GCP_PROJECT_ID }} | tr -d '\n\r')"

          echo "Service URL: $URL"

          # Health
          curl -sS "$URL/health" | jq .

          # Notes
          curl -sS -X POST "$URL/api/notes" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: riri" \
            -d '{"title":"CI test","content":"smoke"}' | jq .

          # Chat
          curl -sS -X POST "$URL/api/chat" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: riri" \
            -d '{"message":"ping","ririMode":true}' | jq .

          # Drive brief
          TODAY=$(date -u +"%Y-%m-%d")
          curl -sS -X POST "$URL/api/drive/brief" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: riri" \
            -d "{\"dateKey\":\"$TODAY\"}" | jq .
