name: Deploy Cloud Run

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:

concurrency:
  group: cloudrun-prod
  cancel-in-progress: true

jobs:
  pr-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: PR validation
        run: echo "PR check only. Skipping deploy."

  build-and-deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_DEPLOY_SA_EMAIL }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build and push image
        run: |
          REGION=asia-southeast2
          PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
          IMAGE_URI="$REGION-docker.pkg.dev/$PROJECT_ID/zantara-repo/zantara-chat:${GITHUB_SHA}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker buildx build --platform linux/amd64 -t "$IMAGE_URI" --push .

      - name: Deploy to Cloud Run
        run: |
          PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
          RUNTIME_SA=${{ secrets.GCP_RUNTIME_SA_EMAIL }}
          gcloud run deploy zantara-chat-v3-1064094238013 \
            --project "$PROJECT_ID" \
            --region asia-southeast2 \
            --image "$IMAGE_URI" \
            --service-account "$RUNTIME_SA" \
            --allow-unauthenticated \
            --update-secrets BACKEND_API_KEY=ZANTARA_BACKEND_API_KEY:latest,PLUGIN_API_KEY=ZANTARA_PLUGIN_API_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest \
            --set-env-vars "CORS_ORIGINS=*.balizero.com,USE_AI_SUMMARY=false"

      - name: Resolve Cloud Run URL
        id: resolve-url
        run: |
          PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
          URL=$(gcloud run services describe zantara-chat-v3-1064094238013 --project "$PROJECT_ID" --region asia-southeast2 --format='value(status.url)')
          echo "SERVICE_URL=$URL" >> $GITHUB_ENV
          echo "Resolved URL: $URL"

      - name: Post-deploy smoke tests
        run: |
          URL="${{ env.SERVICE_URL }}"
          KEY=$(gcloud secrets versions access latest --secret=ZANTARA_PLUGIN_API_KEY --project ${{ secrets.GCP_PROJECT_ID }} | tr -d '\n\r')

          echo "ðŸ”Ž Testing /health..."
          curl -s "$URL/health" | jq .

          echo "ðŸ”Ž Testing /api/notes (POST)..."
          curl -s -X POST "$URL/api/notes" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: riri" \
            -d '{"title":"CI Test","content":"Smoke test"}' | jq .

          echo "ðŸ”Ž Testing /api/notes (GET)..."
          curl -s "$URL/api/notes" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: riri" | jq .

          echo "ðŸ”Ž Testing /api/chat..."
          curl -s -X POST "$URL/api/chat" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: riri" \
            -d '{"message":"Test automatico CI","ririMode":true}' | jq .

          echo "ðŸ”Ž Testing /api/drive/brief..."
          TODAY=$(date -u +"%Y-%m-%d")
          curl -s -X POST "$URL/api/drive/brief" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: riri" \
            -d "{\"dateKey\":\"$TODAY\"}" | jq .
