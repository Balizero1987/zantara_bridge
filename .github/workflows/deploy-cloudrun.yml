name: Deploy Cloud Run

on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: cloudrun-prod
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    env:
      REGION: asia-southeast2
      SERVICE: zantara-chat-v3-1064094238013
      AR_REPO: zantara-repo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_DEPLOY_SA_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install & Build
        run: |
          set -euo pipefail
          npm ci
          npm run build
          # guardie: deve esistere dist/index.js e le rotte compilate
          test -f dist/index.js
          test -f dist/routes/api/notes.js
          test -f dist/routes/api/chat.js
          test -f dist/routes/api/driveBrief.js

      - name: Build & Push image
        run: |
          set -euo pipefail
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.AR_REPO }}/zantara-chat:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker buildx build --platform linux/amd64 -t "$IMAGE" --push .

      - name: Deploy to Cloud Run
        run: |
          set -euo pipefail
          gcloud run deploy "${{ env.SERVICE }}" \
            --region "${{ env.REGION }}" \
            --image "$IMAGE" \
            --platform managed \
            --service-account "${{ secrets.GCP_RUNTIME_SA_EMAIL }}" \
            --allow-unauthenticated \
            --set-env-vars "CORS_ORIGINS=*.balizero.com,USE_AI_SUMMARY=false,DRIVE_ID_AMBARADAM=${{ vars.DRIVE_ID_AMBARADAM }}" \
            --set-secrets "BACKEND_API_KEY=ZANTARA_BACKEND_API_KEY:latest,PLUGIN_API_KEY=ZANTARA_PLUGIN_API_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest,GOOGLE_SERVICE_ACCOUNT_KEY=GOOGLE_SERVICE_ACCOUNT_KEY:latest,DRIVE_SUBJECT=DRIVE_SUBJECT:latest"

      - name: Smoke tests
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          set -euo pipefail
          URL="$(gcloud run services describe ${{ env.SERVICE }} --region "${{ env.REGION }}" --project "$GCP_PROJECT_ID" --format='value(status.url)')"
          KEY="$(gcloud secrets versions access latest --secret=ZANTARA_PLUGIN_API_KEY --project "$GCP_PROJECT_ID" | tr -d '\n\r')"
          echo "Service URL: $URL"

          # health
          curl -fsS "$URL/health" | jq .

          # notes
          curl -fsS -X POST "$URL/api/notes" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: BOSS" \
            -d '{"title":"CI test","content":"smoke"}' | jq .

          # chat
          curl -fsS -X POST "$URL/api/chat" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: $KEY" -H "X-BZ-USER: BOSS" \
            -d '{"message":"ping","ririMode":false}' | jq .
