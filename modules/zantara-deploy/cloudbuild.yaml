# Cloud Build configuration per Zantara Multi-Agent System
# Deploya orchestrator e agenti su Google Cloud Run

substitutions:
  _SERVICE_NAME: "zantara-orchestrator"
  _REGION: "asia-southeast2"
  _MEMORY: "1Gi"
  _CPU: "1"
  _MIN_INSTANCES: "0"
  _MAX_INSTANCES: "10"
  _CONCURRENCY: "80"

steps:
  # Build dell'immagine Docker
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest'
      - '.'

  # Push dell'immagine al Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args: 
      - 'push'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA'
    waitFor: ['build-image']

  # Push del tag latest
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-latest'
    args: 
      - 'push'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest'
    waitFor: ['build-image']

  # Deploy su Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-service'
    args:
      - gcloud
      - run
      - deploy
      - ${_SERVICE_NAME}
      - --image=gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA
      - --region=${_REGION}
      - --platform=managed
      - --allow-unauthenticated
      - --memory=${_MEMORY}
      - --cpu=${_CPU}
      - --min-instances=${_MIN_INSTANCES}
      - --max-instances=${_MAX_INSTANCES}
      - --concurrency=${_CONCURRENCY}
      - --set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID
      - --set-env-vars=X_BZ_USER=SYSTEM
      - --set-env-vars=MONTHLY_LIMIT=50000
      - --set-env-vars=DAILY_LIMIT=2000
      - --set-env-vars=PUBSUB_TOPIC=zantara-tasks
      - --timeout=900
      - --service-account=zantara-orchestrator@$PROJECT_ID.iam.gserviceaccount.com
    waitFor: ['push-image']

  # Setup dei topic Pub/Sub (se non esistono)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'setup-pubsub'
    entrypoint: 'bash'
    args:
      - -c
      - |
        # Crea topic se non esiste
        gcloud pubsub topics describe zantara-tasks || \
        gcloud pubsub topics create zantara-tasks

        # Crea subscription per agenti
        gcloud pubsub subscriptions describe zantara-tasks-sub || \
        gcloud pubsub subscriptions create zantara-tasks-sub \
          --topic=zantara-tasks \
          --ack-deadline=600

        echo "Pub/Sub setup completed"
    waitFor: ['-']  # Esegue in parallelo

  # Verifica deployment con health check
  - name: 'gcr.io/cloud-builders/curl'
    id: 'health-check'
    args:
      - '-f'
      - 'https://${_SERVICE_NAME}-${_HASH_${_SERVICE_NAME}}-${_REGION_HASH}.a.run.app/health'
    waitFor: ['deploy-service']
    timeout: '60s'

# Configurazione avanzata
options:
  machineType: 'E2_HIGHCPU_8'
  substitutionOption: 'ALLOW_LOOSE'
  logging: CLOUD_LOGGING_ONLY

# Salva artifacts
artifacts:
  images: 
    - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA'
    - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest'

timeout: '1200s'  # 20 minuti